package provide step_to_history.dsx 1.0

### Move on button v1.0 by Damian ###

proc save_this_espresso_to_history {unused_old_state unused_new_state} {
	puts "save_this_espresso_to_history "
	# only save shots that have at least 5 data points
	if {!$::settings(history_saved) && [espresso_elapsed length] > 5 && [espresso_pressure length] > 5 && $::settings(should_save_history) == 1} {

		#set clock [clock seconds]
		if {[info exists ::settings(espresso_clock)] != 1} {
			# in theory, this should never occur.
			msg "This espresso's start time was not recorded. Possibly we didn't get the bluetooth message of state change to espresso."
			set ::settings(espresso_clock) [clock seconds]
		}

		set clock $::settings(espresso_clock)
		set name [clock format $clock]

		set espresso_data {}
		set espresso_data "name [list $name]\n"
		set espresso_data "clock $clock\n"
		#set espresso_data "final_espresso_weight $::de1(final_espresso_weight)\n"

		#set espresso_data "settings [array get ::settings]\n"

		append espresso_data "espresso_elapsed {[espresso_elapsed range 0 end]}\n"
		append espresso_data "espresso_pressure {[espresso_pressure range 0 end]}\n"
		append espresso_data "espresso_weight {[espresso_weight range 0 end]}\n"
		append espresso_data "espresso_flow {[espresso_flow range 0 end]}\n"
		append espresso_data "espresso_flow_weight {[espresso_flow_weight range 0 end]}\n"
		append espresso_data "espresso_flow_weight_raw {[espresso_flow_weight_raw range 0 end]}\n"
		append espresso_data "espresso_temperature_basket {[espresso_temperature_basket range 0 end]}\n"
		append espresso_data "espresso_temperature_mix {[espresso_temperature_mix range 0 end]}\n"
		append espresso_data "espresso_water_dispensed {[espresso_water_dispensed range 0 end]}\n"

		append espresso_data "espresso_pressure_goal {[espresso_pressure_goal range 0 end]}\n"
		append espresso_data "espresso_flow_goal {[espresso_flow_goal range 0 end]}\n"
		append espresso_data "espresso_temperature_goal {[espresso_temperature_goal range 0 end]}\n"
        append espresso_data "espresso_state_change {[espresso_state_change range 0 end]}\n"

		# format settings nicely so that it is easier to read and parse
		append espresso_data "settings {\n"
	    foreach k [lsort -dictionary [array names ::settings]] {
	        set v $::settings($k)
	        append espresso_data [subst {\t[list $k] [list $v]\n}]
	    }
	    append espresso_data "}\n"

	    # things associated with the machine itself
		append espresso_data "machine {\n"
	    foreach k [lsort -dictionary [array names ::de1]] {
	        set v $::de1($k)
	        append espresso_data [subst {\t[list $k] [list $v]\n}]
	    }
	    append espresso_data "}\n"

		set fn "[homedir]/history/[clock format $clock -format "%Y%m%dT%H%M%S"].shot"
		write_file $fn $espresso_data
		msg "Save this espresso to history"

		set ::settings(history_saved) 1
	} else {
		msg "Not saved to history $::settings(history_saved) - [espresso_elapsed length] - [espresso_pressure length] - $::settings(should_save_history) "
	}
}

